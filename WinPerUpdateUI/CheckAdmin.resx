<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>